
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read and write their own data
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Products can be read by any authenticated user
    // Products can only be created, updated, or deleted by an admin
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Commissions can only be read by the reseller or an admin
    match /commissions/{commissionId} {
        allow read: if request.auth != null && (get(/databases/$(database)/documents/commissions/$(commissionId)).data.resellerId == request.auth.uid || isAdmin());
        allow write: if request.auth != null && isAdmin();
    }
    
    // Orders can be created by any authenticated user
    // Orders can only be read by the customer who created it or an admin
    match /orders/{orderId} {
        allow create: if request.auth != null;
        allow read, update: if request.auth != null && (get(/databases/$(database)/documents/orders/$(orderId)).data.customer.uid == request.auth.uid || isAdmin());
    }
  }
}
